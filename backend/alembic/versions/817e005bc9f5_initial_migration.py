"""Initial migration

Revision ID: 817e005bc9f5
Revises: 
Create Date: 2025-07-30 16:41:49.278221

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '817e005bc9f5'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('model_performance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model_version', sa.String(), nullable=False),
    sa.Column('model_type', sa.String(), nullable=False),
    sa.Column('season', sa.Integer(), nullable=True),
    sa.Column('week', sa.Integer(), nullable=True),
    sa.Column('position', sa.String(), nullable=True),
    sa.Column('mae', sa.DECIMAL(precision=4, scale=2), nullable=True),
    sa.Column('rmse', sa.DECIMAL(precision=4, scale=2), nullable=True),
    sa.Column('mape', sa.DECIMAL(precision=4, scale=2), nullable=True),
    sa.Column('r_squared', sa.DECIMAL(precision=4, scale=3), nullable=True),
    sa.Column('sample_size', sa.Integer(), nullable=True),
    sa.Column('metrics_detail', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('evaluated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_model_performance', 'model_performance', ['model_version', 'season', 'week'], unique=False)
    op.create_table('players',
    sa.Column('player_id', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('position', sa.String(), nullable=True),
    sa.Column('team', sa.String(), nullable=True),
    sa.Column('fantasy_positions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('years_exp', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('player_id')
    )
    op.create_index('idx_player_name', 'players', ['first_name', 'last_name'], unique=False)
    op.create_index('idx_player_position_team', 'players', ['position', 'team'], unique=False)
    op.create_index(op.f('ix_players_position'), 'players', ['position'], unique=False)
    op.create_index(op.f('ix_players_team'), 'players', ['team'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('subscription_tier', sa.String(), nullable=True),
    sa.Column('stripe_customer_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_customer_id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('draft_tiers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.String(), nullable=True),
    sa.Column('season', sa.Integer(), nullable=False),
    sa.Column('tier', sa.Integer(), nullable=False),
    sa.Column('probability', sa.DECIMAL(precision=4, scale=3), nullable=True),
    sa.Column('cluster_features', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('tier_label', sa.String(), nullable=True),
    sa.Column('alt_tiers', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('model_version', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['players.player_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('player_id', 'season', 'model_version')
    )
    op.create_index('idx_tier_season_tier', 'draft_tiers', ['season', 'tier'], unique=False)
    op.create_index(op.f('ix_draft_tiers_tier'), 'draft_tiers', ['tier'], unique=False)
    op.create_table('player_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.String(), nullable=True),
    sa.Column('season', sa.Integer(), nullable=False),
    sa.Column('week', sa.Integer(), nullable=False),
    sa.Column('stats', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('fantasy_points_std', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('fantasy_points_ppr', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('fantasy_points_half', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('opponent', sa.String(), nullable=True),
    sa.Column('is_home', sa.Boolean(), nullable=True),
    sa.Column('game_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['players.player_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('player_id', 'season', 'week')
    )
    op.create_index('idx_stats_player_season', 'player_stats', ['player_id', 'season'], unique=False)
    op.create_index('idx_stats_season_week', 'player_stats', ['season', 'week'], unique=False)
    op.create_table('prediction_usage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('week_start', sa.DateTime(), nullable=False),
    sa.Column('predictions_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'week_start')
    )
    op.create_index('idx_usage_user_week', 'prediction_usage', ['user_id', 'week_start'], unique=False)
    op.create_table('predictions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.String(), nullable=True),
    sa.Column('season', sa.Integer(), nullable=False),
    sa.Column('week', sa.Integer(), nullable=False),
    sa.Column('predicted_points', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('confidence_interval', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('prediction_std', sa.DECIMAL(precision=4, scale=2), nullable=True),
    sa.Column('model_version', sa.String(), nullable=False),
    sa.Column('model_type', sa.String(), nullable=True),
    sa.Column('features_used', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['players.player_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_predictions_created', 'predictions', [sa.literal_column('created_at DESC')], unique=False)
    op.create_index('idx_predictions_player_week', 'predictions', ['player_id', 'season', 'week'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('current_period_start', sa.DateTime(), nullable=True),
    sa.Column('current_period_end', sa.DateTime(), nullable=True),
    sa.Column('trial_end', sa.DateTime(), nullable=True),
    sa.Column('canceled_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_subscription_id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('user_leagues',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('platform', sa.String(), nullable=True),
    sa.Column('league_id', sa.String(), nullable=False),
    sa.Column('league_name', sa.String(), nullable=True),
    sa.Column('scoring_settings', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('roster_positions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('team_count', sa.Integer(), nullable=True),
    sa.Column('roster', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('draft_position', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'platform', 'league_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_leagues')
    op.drop_table('subscriptions')
    op.drop_index('idx_predictions_player_week', table_name='predictions')
    op.drop_index('idx_predictions_created', table_name='predictions')
    op.drop_table('predictions')
    op.drop_index('idx_usage_user_week', table_name='prediction_usage')
    op.drop_table('prediction_usage')
    op.drop_index('idx_stats_season_week', table_name='player_stats')
    op.drop_index('idx_stats_player_season', table_name='player_stats')
    op.drop_table('player_stats')
    op.drop_index(op.f('ix_draft_tiers_tier'), table_name='draft_tiers')
    op.drop_index('idx_tier_season_tier', table_name='draft_tiers')
    op.drop_table('draft_tiers')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_players_team'), table_name='players')
    op.drop_index(op.f('ix_players_position'), table_name='players')
    op.drop_index('idx_player_position_team', table_name='players')
    op.drop_index('idx_player_name', table_name='players')
    op.drop_table('players')
    op.drop_index('idx_model_performance', table_name='model_performance')
    op.drop_table('model_performance')
    # ### end Alembic commands ###
